doctype html
html(lang='en')
  head
    meta(charset="utf-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
    title Mongoose Quick Start v#{package.version}
    link(href='http://fonts.googleapis.com/css?family=Anonymous+Pro:400,700|Droid+Sans+Mono|Open+Sans:400,700|Linden+Hill|Quattrocento:400,700|News+Cycle:400,700|Antic+Slab|Cabin+Condensed:400,700', rel='stylesheet', type='text/css')
    link(href='/docs/css/default.css', rel='stylesheet', type='text/css')
    link(href='/docs/css/guide.css', rel='stylesheet', type='text/css')
  body
    a#forkbanner(href="http://github.com/learnboost/mongoose")
      img(style="position: absolute; top: 0; right: 0; border: 0;", src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png", alt="Fork me on GitHub")
    #links
      #header
        h1
          a(href="../index.html")
            .mongoose Mongoose
      include includes/nav
    #content
      .module
        h2 Plugins
        :markdown
          Schemas are pluggable, that is, they allow for applying pre-packaged capabilities to extend their functionality. This is a very powerful feature.

          Suppose that we have several collections in our database and want to add last-modified functionality to each one. With plugins this is easy. Just create a plugin once and apply it to each `Schema`:

        :js
          // lastMod.js
          module.exports = exports = function lastModifiedPlugin (schema, options) {
            schema.add({ lastMod: Date })

            schema.pre('save', function (next) {
              this.lastMod = new Date
              next()
            })

            if (options && options.index) {
              schema.path('lastMod').index(options.index)
            }
          }

          // game-schema.js
          var lastMod = require('./lastMod');
          var Game = new Schema({ ... });
          Game.plugin(lastMod, { index: true });

          // player-schema.js
          var lastMod = require('./lastMod');
          var Player = new Schema({ ... });
          Player.plugin(lastMod);
        :markdown
          We just added last-modified behavior to both our `Game` and `Player` schemas and declared an index on the `lastMod` path of our Games to boot. Not bad for a few lines of code.
        h3 Community!
        :markdown
          Not only can you re-use schema functionality in your own projects but you also reap the benefits of the Mongoose community as well. Any plugin published to [npm](https://npmjs.org/) and [tagged](https://npmjs.org/doc/tag.html) with `mongoose` will show up on our [search results](http://plugins.mongoosejs.com) page.
